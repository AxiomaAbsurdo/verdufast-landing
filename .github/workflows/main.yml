name: Build and Push Docker Images

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: dkregistry-vf.verdufast.uy
  REGISTRY_USERNAME: verdufast
  REGISTRY_PASSWORD: RegistryPass2025

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service:
          - name: backend
            context: ./backend
            dockerfile: ./backend/Dockerfile
          - name: frontend
            context: ./frontend
            dockerfile: ./frontend/Dockerfile
          - name: seller-interface
            context: ./seller-interface
            dockerfile: ./seller-interface/Dockerfile
          - name: webhook-service
            context: ./webhook-service
            dockerfile: ./webhook-service/Dockerfile

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for better version generation

    - name: Generate version number
      id: version
      run: |
        # Generate version based on timestamp and short commit hash
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        SHORT_SHA=$(git rev-parse --short HEAD)
        VERSION="${TIMESTAMP}-${SHORT_SHA}"
        
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "timestamp=${TIMESTAMP}" >> $GITHUB_OUTPUT
        echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT
        
        echo "Generated version: ${VERSION}"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.REGISTRY_USERNAME }}
        password: ${{ env.REGISTRY_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/verdufast-${{ matrix.service.name }}
        tags: |
          type=raw,value=latest
          type=raw,value=${{ steps.version.outputs.version }}
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.service.context }}
        file: ${{ matrix.service.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64
        build-args: |
          NODE_ENV=production
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Image digest
      run: echo "Image pushed with digest ${{ steps.build.outputs.digest }}"

  deploy-to-k3s:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Generate version number
      id: version
      run: |
        TIMESTAMP=$(date +%Y%m%d-%H%M%S)
        SHORT_SHA=$(git rev-parse --short HEAD)
        VERSION="${TIMESTAMP}-${SHORT_SHA}"
        echo "version=${VERSION}" >> $GITHUB_OUTPUT

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Configure kubectl for K3s
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config

        # Test connection
        kubectl cluster-info
        kubectl get nodes

    - name: Update Kubernetes deployments
      run: |
        # Update backend deployment
        kubectl set image deployment/backend-deployment \
          backend=${{ env.REGISTRY }}/verdufast-backend:${{ steps.version.outputs.version }} \
          -n verdufast

        # Update frontend deployment
        kubectl set image deployment/frontend-deployment \
          frontend=${{ env.REGISTRY }}/verdufast-frontend:${{ steps.version.outputs.version }} \
          -n verdufast

        # Update seller-interface deployment
        kubectl set image deployment/seller-interface-deployment \
          seller-interface=${{ env.REGISTRY }}/verdufast-seller-interface:${{ steps.version.outputs.version }} \
          -n verdufast

        # Update webhook-service deployment
        kubectl set image deployment/webhook-service-deployment \
          webhook-service=${{ env.REGISTRY }}/verdufast-webhook-service:${{ steps.version.outputs.version }} \
          -n verdufast

    - name: Wait for rollout completion
      run: |
        echo "Waiting for deployments to complete..."
        kubectl rollout status deployment/backend-deployment -n verdufast --timeout=300s
        kubectl rollout status deployment/frontend-deployment -n verdufast --timeout=300s
        kubectl rollout status deployment/seller-interface-deployment -n verdufast --timeout=300s
        kubectl rollout status deployment/webhook-service-deployment -n verdufast --timeout=300s

    - name: Verify deployment
      run: |
        echo "Verifying deployments..."
        kubectl get pods -n verdufast -l app=backend
        kubectl get pods -n verdufast -l app=frontend
        kubectl get pods -n verdufast -l app=seller-interface
        kubectl get pods -n verdufast -l app=webhook-service

  summary:
    needs: [build-and-push, deploy-to-k3s]
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Generate build summary
      run: |
        echo "## ðŸš€ Docker Build & Deploy Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Registry:** ${{ env.REGISTRY }}" >> $GITHUB_STEP_SUMMARY
        echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "**Namespace:** verdufast" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Built & Deployed Images:" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ env.REGISTRY }}/verdufast-backend:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ env.REGISTRY }}/verdufast-frontend:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ env.REGISTRY }}/verdufast-seller-interface:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`${{ env.REGISTRY }}/verdufast-webhook-service:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Kubernetes Commands:" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "# Check deployment status" >> $GITHUB_STEP_SUMMARY
        echo "kubectl get pods -n verdufast" >> $GITHUB_STEP_SUMMARY
        echo "kubectl get services -n verdufast" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Pull images manually" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/verdufast-backend:latest" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/verdufast-frontend:latest" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/verdufast-seller-interface:latest" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/verdufast-webhook-service:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
